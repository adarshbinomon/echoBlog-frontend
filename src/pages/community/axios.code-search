# Query: axios
# ContextLines: 1

133 results - 32 files

package-lock.json:
    34          "animate.css": "^4.1.1",
    35:         "axios": "^1.6.7",
    36          "class-variance-authority": "^0.7.0",

  2559          "@portive/api-types": "^9.0.0",
  2560:         "axios": "^0.27.2",
  2561          "resolvable-value": "^1.0.2"

  2563      },
  2564:     "node_modules/@portive/client/node_modules/axios": {
  2565        "version": "0.27.2",
  2566:       "resolved": "https://registry.npmjs.org/axios/-/axios-0.27.2.tgz",
  2567        "integrity": "sha512-t+yRIyySRTp/wua5xEr+z1q60QmLq8ABsS5O9Me1AsE5dfKqgnCFzwiCZZ/cGNd1lq4/7akDWMxdhVlucjmnOQ==",

  4534      },
  4535:     "node_modules/axios": {
  4536        "version": "1.6.7",
  4537:       "resolved": "https://registry.npmjs.org/axios/-/axios-1.6.7.tgz",
  4538        "integrity": "sha512-/hDJGff6/c7u0hDkvkGxR/oy6CbCs8ziCsC7SqmhjfozqiJGc8Z11wrv9z9lYfY4K8l+H9TpjcMDX0xOZmx+RA==",

package.json:
  36      "animate.css": "^4.1.1",
  37:     "axios": "^1.6.7",
  38      "class-variance-authority": "^0.7.0",

src\components\admin\Navbar.tsx:
   2  import { Link, useNavigate } from "react-router-dom";
   3: import axios from "axios";
   4  import toast from "react-hot-toast";

  15      setLoading(true);
  16:     axios
  17        .get(`${authServiceBaseUrl}/logout`, { withCredentials: true })

src\components\admin\PostManagement.tsx:
   1: import axios from "axios";
   2  import { useEffect, useState } from "react";

  56  
  57:     axios
  58        .get(`${postServiceBaseUrl}/all-posts`, { withCredentials: true })

  82            onClick: () => {
  83:             axios
  84                .put(`${postServiceBaseUrl}/update-post-status/${postId}`, { withCredentials: true })

src\components\admin\UserManagement.tsx:
   1: import axios from "axios";
   2  import React, { useEffect, useState } from "react";

  52    useEffect(() => {
  53:     axios
  54        .get(`${userServiceBaseUrl}/find-all-users`, { withCredentials: true })

  71            onClick: () => {
  72:             axios
  73                .put(

src\components\common\Modal.tsx:
   1: import axios from "axios";
   2  import React, { useEffect, useState } from "react";

  43  
  44:     axios
  45        .put(`${postServiceBaseUrl}/edit-comment/${postId}`, commentData, {

src\components\common\Navbar.tsx:
   2  import { Link, useNavigate } from "react-router-dom";
   3: import axios from "axios";
   4  import { clearUser } from "../../redux/slices/userSlices";

  33    const handleLogout = () => {
  34:     axios
  35        .get(`${authServiceBaseUrl}/logout`, { withCredentials: true })

  51      setSearchValue(value);
  52:     axios
  53        .get(`${userServiceBaseUrl}/search-user/${value}`, { withCredentials: true })

  63        });
  64:     axios
  65        .get(`${postServiceBaseUrl}/search-post/${value}`, { withCredentials: true })

  75        });
  76:     axios
  77        .get(`${groupServiceBaseUrl}/search-community/${value}`, { withCredentials: true })

src\components\community\CommunityPostList.tsx:
   1: import axios from "axios";
   2  import React, { useEffect, useState } from "react";

  35      if (communityId) {
  36:       axios
  37          .get(`${postServiceBaseUrl}/get-community-posts/${communityId}`, { withCredentials: true })

  53      try {
  54:       axios
  55          .put(`${userServiceBaseUrl}/save-post/`, data, {

src\components\community\MemberManagement.tsx:
   3  import { useNavigate, useParams } from "react-router-dom";
   4: import axios from "axios";
   5  import { confirmAlert } from "react-confirm-alert"; // Import the confirmAlert function

  17    useEffect(() => {
  18:     axios
  19        .get(`${groupServiceBaseUrl}/get-community-with-users/${communityId}`, {

  47              };
  48:             axios
  49                .post(

  75      };
  76:     axios
  77        .post(`${groupServiceBaseUrl}/make-admin/${community?._id}`, data, {

src\components\community\Members.tsx:
   1: import axios from "axios";
   2  import React, { useEffect, useState } from "react";

  13    useEffect(() => {
  14:     axios
  15        .get(`${userServiceBaseUrl}/get-community-members/${communityId}`, { withCredentials: true })

src\components\community\Settings.tsx:
   3  import Footer from "../common/Footer";
   4: import axios from "axios";
   5  import { useNavigate, useParams } from "react-router-dom";

  21    useEffect(() => {
  22:     axios
  23        .get(`${groupServiceBaseUrl}/get-community/${communityId}`, {

  46      console.log("Settings saved:", data);
  47:     axios
  48        .put(`${groupServiceBaseUrl}/community-edit/${community?._id}`, data, {

src\components\home\Community.tsx:
   2  import { useFormik } from "formik";
   3: import axios from "axios";
   4  import toast from "react-hot-toast";

  29          values = { ...values, createdBy: userData._id };
  30:         axios
  31            .post(`${groupServiceBaseUrl}/create-community`, values, {

src\components\home\CommunityList.tsx:
   1: import axios from "axios";
   2  import React, { useEffect, useState } from "react";

  16    useEffect(() => {
  17:     axios
  18        .get(`${groupServiceBaseUrl}/get-all-communities/${userData._id}`, {

  31      try {
  32:       axios.post(`${groupServiceBaseUrl}/join-group/${userId}`, { withCredentials: true });
  33      } catch (error) {

src\components\home\ForYou.tsx:
   1  import { useEffect, useState } from "react";
   2: import axios from "axios";
   3  import { UserData, PostData } from "../../utils/interfaces/inteface";

  31    useEffect(() => {
  32:     axios
  33        .get(`${postServiceBaseUrl}/posts`, { withCredentials: true })

  52      try {
  53:       axios
  54          .put(`${userServiceBaseUrl}/save-post/`, data, {

src\components\home\UserList.tsx:
   1  import { useEffect, useState } from "react";
   2: import axios from "axios";
   3  import { UserData } from "../../utils/interfaces/inteface";

  20    useEffect(() => {
  21:     axios
  22        .get(`${userServiceBaseUrl}/find-users/${userData._id}`, {

  37      };
  38:     axios
  39        .post(`${userServiceBaseUrl}/follow-user`, data, {

src\components\post\Quill.tsx:
   3  import "quill/dist/quill.snow.css";
   4: import axios from "axios";
   5  import { useSelector } from "react-redux";

  78  
  79:       axios
  80          .post(`${postServiceBaseUrl}/create`, data, { withCredentials: true })

src\components\post\QuillEdit.tsx:
   3  import "quill/dist/quill.snow.css";
   4: import axios, { Axios } from "axios";
   5  import { PostData, UserData } from "../../utils/interfaces/inteface";

  57        };
  58:       axios
  59          .put(`${postServiceBaseUrl}/edit-post/${postId}`, data, {

src\components\profile\Community.tsx:
   1: import axios from "axios";
   2  import { useEffect, useState } from "react";

  39      try {
  40:       axios
  41          .get(`${groupServiceBaseUrl}/get-user-communities/${userData?._id}`, {

  52    useEffect(() => {
  53:     axios
  54        .get(`${postServiceBaseUrl}/get-user-community-post/${userData?._id}`, { withCredentials: true })

  73      try {
  74:       axios
  75          .put(`${userServiceBaseUrl}/save-post/`, data, {

src\components\profile\EditProfileAccountTab.tsx:
   5  import { dateParser } from "../../helper/dateParser";
   6: import axios from "axios";
   7  import { editAccountValidation } from "../../helper/validate";

  35          console.log(values);
  36:         axios
  37            .put(`${userServiceBaseUrl}/edit-profile`, values, {

src\components\profile\EditProfileProfileTab.tsx:
   6  import { useState } from "react";
   7: import axios from "axios";
   8  import toast from "react-hot-toast";

  31  
  32:     axios
  33        .post(`${userServiceBaseUrl}/upload-profile-picture`, formData, { withCredentials: true })

  47  
  48:     axios
  49        .post(`${userServiceBaseUrl}/upload-cover-picture`, formData, { withCredentials: true })

  68        if (formik.isValid) {
  69:         axios
  70            .put(`${userServiceBaseUrl}/edit-profile`, values, {

src\components\profile\PostList.tsx:
   1: import axios from "axios";
   2  import { useNavigate } from "react-router-dom";

  33        console.log(userServiceBaseUrl, postServiceBaseUrl);
  34:       axios
  35          .get(`${postServiceBaseUrl}/get-posts/${userId}`, {

  60      try {
  61:       axios
  62          .put(`${userServiceBaseUrl}/save-post/`, data, {

src\components\profile\SavedPosts.tsx:
   3  // import { PostData, UserData } from "../../utils/interfaces/inteface";
   4: // import axios from "axios";
   5  // import { Link } from "react-router-dom";

  16  //     const data = userData.savedPosts;
  17: //     axios
  18  //       .post(`${postServiceBaseUrl}/get-saved-posts`, data, {

src\pages\admin\AdminLogin.tsx:
   3  import { loginValidation } from "../../helper/validate";
   4: import axios from "axios";
   5  import toast from "react-hot-toast";

  35        if (formik.isValid) {
  36:         axios
  37            .post(`${authServiceBaseUrl}/admin/login`, values, { withCredentials: true })

src\pages\community\CommunityProfile.tsx:
   2  import { useNavigate, useParams } from "react-router-dom";
   3: import axios, { Axios, AxiosResponse } from "axios";
   4  import { useSelector } from "react-redux";

  34    useEffect(() => {
  35:     axios
  36        .get(`${groupServiceBaseUrl}/get-community/${communityId}`, {

  38        })
  39:       .then((res: AxiosResponse) => {
  40          setCommunity(res.data.community);

  56        };
  57:       axios
  58          .put(`${groupServiceBaseUrl}/join-community`, data, {

src\pages\community\CommunitySettings.tsx:
  11  import { useEffect, useState } from "react";
  12: import axios from "axios";
  13  import { CommunityData } from "../../utils/interfaces/inteface";

  25    useEffect(() => {
  26:     axios
  27        .get(`${groupServiceBaseUrl}/get-community/${communityId}`, {

src\pages\user\Home.tsx:
   2  import { useNavigate, useLocation } from "react-router-dom";
   3: import axios, { AxiosResponse } from "axios";
   4  import Navbar from "../../components/common/Navbar";

  29    useEffect(() => {
  30:     axios
  31        .get(`${userServiceBaseUrl}/user-profile/${id}`, {

src\pages\user\Login.tsx:
   3  import { loginValidation } from "../../helper/validate";
   4: import axios from "axios";
   5  import { signInWithPopup, GoogleAuthProvider } from "firebase/auth";

  33        if (formik.isValid) {
  34:         axios
  35            .post(`${authServiceBaseUrl}/login`, values, { withCredentials: true })

  71  
  72:       axios
  73          .post(`${authServiceBaseUrl}/google-login`, userData, { withCredentials: true })

src\pages\user\OtpVerify.tsx:
   1  import React, { useState, useRef, useEffect } from "react";
   2: import axios from "axios";
   3  import toast, { Toaster } from "react-hot-toast";

  43    const handleResendOtp = () => {
  44:     axios.get(`${authServiceBaseUrl}/resend-otp`, {withCredentials: true}).then((res) => {
  45        if (res.status) {

  58      } else {
  59:       axios
  60          .post(`${authServiceBaseUrl}/verify-otp`, enteredOtp, { withCredentials: true })

src\pages\user\Post.tsx:
    4  import { useNavigate, useParams } from "react-router-dom";
    5: import axios from "axios";
    6  import QuillViewer from "../../components/post/QuillViewer";

   50    useEffect(() => {
   51:     axios
   52        .get(`${postServiceBaseUrl }/${id}`, { withCredentials: true })

   90            onClick: () => {
   91:             axios
   92                .get(`${postServiceBaseUrl }/delete-post/${post?._id}`, { withCredentials: true })

  110  
  111:     axios.post(`${postServiceBaseUrl }/like-Post/${post?._id}`, id, { withCredentials: true }).then((res: any) => {
  112        if (res.status) {

  125      setLoadingComments(true);
  126:     axios
  127        .post(`${postServiceBaseUrl }/comment-post/${post?._id}`, {

  165        };
  166:       axios
  167          .post(`${postServiceBaseUrl }/reply-to-comment/${post?._id}`, commentData, {

  193      };
  194:     axios
  195        .post(`${postServiceBaseUrl }/like-comment/${commentId}`, data, {

  215            onClick: () => {
  216:             axios
  217                .post(`${postServiceBaseUrl }/delete-comment/${post?._id}`, data, {

  241  
  242:     axios
  243        .post(`${postServiceBaseUrl }/report-post/${post?._id}`, data, {

src\pages\user\Signup.tsx:
   4  import { useFormik } from "formik";
   5: import axios from "axios";
   6  import { signupValidation } from "../../helper/validate";

  39        if (formik.isValid) {
  40:         axios
  41            .post(`${authServiceBaseUrl }/signup`, values, { withCredentials: true })

  73  
  74:       axios
  75          .post(`${authServiceBaseUrl }/google-login`, userData, { withCredentials: true })

src\pages\user\ThirdProfile.tsx:
   1: import axios from "axios";
   2  import { useEffect, useState } from "react";

  27    useEffect(() => {
  28:     axios
  29        .get(`${userServiceBaseUrl}/user-profile/${userId}`, {

  47      };
  48:     axios
  49        .post(`${userServiceBaseUrl}/follow-user`, data, {

src\pages\user\UserDetails.tsx:
   4  import { useFormik } from "formik";
   5: import axios from "axios";
   6  import { userDetailsValidation } from "../../helper/validate";

  34        if (formik.isValid) {
  35:         axios
  36            .post(`${baseUrl}/user-details`, values, { withCredentials: true })
